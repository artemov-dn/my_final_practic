services:
 zookeeper:
   image: confluentinc/cp-zookeeper:7.4.4
   restart: always
   container_name: zookeeper
   hostname: zookeeper
   ports:
     - "2181:2181"
   volumes:
     - ./jaas-confs/zookeeper.sasl.jaas.conf:/etc/zookeeper/secrets/zookeeper.sasl.jaas.conf
   environment:
     ZOOKEEPER_SERVER_ID: 1
     ZOOKEEPER_CLIENT_PORT: 2181
     ZOOKEEPER_TICK_TIME: 2000
     ZOOKEEPER_INIT_LIMIT: 5
     ZOOKEEPER_SYNC_LIMIT: 2
     ZOOKEEPER_REQUIRE_CLIENT_AUTH_SCHEME: "sasl"
     ZOOKEEPER_AUTH_PROVIDER_1: "org.apache.zookeeper.server.auth.SASLAuthenticationProvider"
     ZOOKEEPER_SASL_ENABLED: "true"
     KAFKA_OPTS:
       -Djava.security.auth.login.config=/etc/zookeeper/secrets/zookeeper.sasl.jaas.conf
       -Dquorum.cnxn.threads.size=20
       -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
       -Dzookeeper.allowSaslFailedClients=false
       -DjaasLoginRenew=3600000     
   networks:
     - kafka_net

 kafka-0:
   image: confluentinc/cp-kafka:7.4.4
   restart: always
   container_name: kafka-0
   hostname: kafka-0
   depends_on:
     - zookeeper
   ports:
     - "9094:9094"
     - "9991:9991"
   volumes:
     - data-kafka-0:/var/lib/kafka/data
     - ./jaas-confs:/etc/kafka/jaas
     - ./kafka-0-creds:/etc/kafka/secrets
   environment:
     KAFKA_BROKER_ID: 0
     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
     KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
     KAFKA_DELETE_TOPIC_ENABLE: true
     KAFKA_JMX_PORT: 9991
     KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,SASL_SSL://0.0.0.0:9093,EXTERNAL://0.0.0.0:9094
     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-0:9092,SASL_SSL://kafka-0:9093,EXTERNAL://localhost:9094
     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SASL_SSL:SASL_SSL,EXTERNAL:SASL_SSL
     KAFKA_LISTENER_SECURITY_PROTOCOL: SSL
     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
     KAFKA_MIN_INSYNC_REPLICAS: 2
     KAFKA_DEFAULT_REPLICATION_FACTOR: 3
     KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
     KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
     KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
     KAFKA_SUPER_USERS: "User:admin"
     KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_server_jaas.conf"
     KAFKA_SSL_KEYSTORE_FILENAME: kafka-0.keystore.jks
     KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-0_keystore_creds
     KAFKA_SSL_KEY_CREDENTIALS: kafka-0_sslkey_creds
     KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-0.truststore.jks
     KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-0_truststore_creds
     KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
     KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer     
   networks:
     - kafka_net

 kafka-1:
   image: confluentinc/cp-kafka:7.4.4
   restart: always
   container_name: kafka-1
   hostname: kafka-1
   depends_on:
     - zookeeper
   ports:
     - "9095:9095"
     - "9992:9992"
   volumes:
     - data-kafka-1:/var/lib/kafka/data
     - ./jaas-confs:/etc/kafka/jaas
     - ./kafka-1-creds:/etc/kafka/secrets
   environment:
     KAFKA_BROKER_ID: 1
     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
     KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
     KAFKA_DELETE_TOPIC_ENABLE: true
     KAFKA_JMX_PORT: 9992
     KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,SASL_SSL://0.0.0.0:9093,EXTERNAL://0.0.0.0:9095
     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,SASL_SSL://kafka-1:9093,EXTERNAL://localhost:9095
     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SASL_SSL:SASL_SSL,EXTERNAL:SASL_SSL
     KAFKA_LISTENER_SECURITY_PROTOCOL: SSL
     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
     KAFKA_MIN_INSYNC_REPLICAS: 2
     KAFKA_DEFAULT_REPLICATION_FACTOR: 3
     KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
     KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
     KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
     KAFKA_SUPER_USERS: "User:admin"
     KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_server_jaas.conf"
     KAFKA_SSL_KEYSTORE_FILENAME: kafka-1.keystore.jks
     KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-1_keystore_creds
     KAFKA_SSL_KEY_CREDENTIALS: kafka-1_sslkey_creds
     KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-1.truststore.jks
     KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-1_truststore_creds
     KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
     KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
   networks:
     - kafka_net
     
 kafka-2:
   image: confluentinc/cp-kafka:7.4.4
   restart: always
   container_name: kafka-2
   hostname: kafka-2
   depends_on:
     - zookeeper
   ports:
     - "9096:9096"
     - "9993:9993"
   volumes:
     - data-kafka-2:/var/lib/kafka/data
     - ./jaas-confs:/etc/kafka/jaas
     - ./kafka-2-creds:/etc/kafka/secrets
   environment:
     KAFKA_BROKER_ID: 2
     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
     KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
     KAFKA_DELETE_TOPIC_ENABLE: true
     KAFKA_JMX_PORT: 9993
     KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,SASL_SSL://0.0.0.0:9093,EXTERNAL://0.0.0.0:9096
     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092,SASL_SSL://kafka-2:9093,EXTERNAL://localhost:9096
     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SASL_SSL:SASL_SSL,EXTERNAL:SASL_SSL
     KAFKA_LISTENER_SECURITY_PROTOCOL: SSL
     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
     KAFKA_MIN_INSYNC_REPLICAS: 2
     KAFKA_DEFAULT_REPLICATION_FACTOR: 3
     KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
     KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
     KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
     KAFKA_SUPER_USERS: "User:admin"
     KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_server_jaas.conf"
     KAFKA_SSL_KEYSTORE_FILENAME: kafka-2.keystore.jks
     KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-2_keystore_creds
     KAFKA_SSL_KEY_CREDENTIALS: kafka-2_sslkey_creds
     KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-2.truststore.jks
     KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-2_truststore_creds
     KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
     KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
   networks:
     - kafka_net
     
 ui:
   image: provectuslabs/kafka-ui:v0.7.0
   ports:
     - "8080:8080"
   environment:
     KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka-0:9092,kafka-1:9092,kafka-2:9092
     KAFKA_CLUSTERS_0_NAME: my_cluster
   networks:
     - kafka_net

 schema-registry:
   image: confluentinc/cp-schema-registry:7.4.4
   hostname: schema-registry
   container_name: schema-registry
   depends_on:
     - kafka-0
     - kafka-1
     - kafka-2
   ports:
     - "8081:8081"
   environment:
     SCHEMA_REGISTRY_HOST_NAME: schema-registry
     SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka-0:9092,kafka-1:9092,kafka-2:9092'
     SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
   networks:
     - kafka_net

     
 kafka-connect:
   build:
     context: ./kafka-connect
   ports:
     - "8083:8083"  # REST API Kafka Connect
     - "9875:9875"
     - "9876:9876"
   depends_on:
     - kafka-0
     - kafka-1
     - kafka-2
     - schema-registry
   environment:
     CONNECT_BOOTSTRAP_SERVERS: kafka-0:9092
     CONNECT_REST_PORT: 8083
     CONNECT_GROUP_ID: 'kafka-connect'
     CONNECT_REST_ADVERTISED_HOST_NAME: 'localhost'

     # Хранение конфигурации, смещений и статусов
     CONNECT_CONFIG_STORAGE_TOPIC: 'connect-config-storage'
     CONNECT_OFFSET_STORAGE_TOPIC: 'connect-offset-storage'
     CONNECT_STATUS_STORAGE_TOPIC: 'connect-status-storage'
     CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
     CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
     CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3

     # Конвертеры
     CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
     CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
     CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
     CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
     CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'

     # Пути к плагинам
     CONNECT_PLUGIN_PATH: /usr/share/java,/etc/kafka-connect/jars
   command: 
     - bash 
     - -c 
     - |
       /etc/confluent/docker/run & 
       echo "Waiting for Kafka Connect to start listening on kafka-connect ⏳"
       while [ $$(curl -s -o /dev/null -w %{http_code} http://kafka-connect:8083/connectors) -eq 000 ] ; do 
         echo -e $$(date) " Kafka Connect listener HTTP state: " $$(curl -s -o /dev/null -w %{http_code} http://kafka-connect:8083/connectors) " (waiting for 200)"
         sleep 5 
       done
       nc -vz kafka-connect 8083
       echo -e "\n--\n+> Creating Kafka Connect pg-connector"
       /script/create-product-connector.sh 
       sleep 10
       /script/create-request-connector.sh 
       sleep infinity
   volumes:
     - ./confluent-hub-components/:/etc/kafka-connect/jars
     - ./kafka-connect/script/:/script     
   networks:
     - kafka_net


 jmx-kafka-0:
   image: "sscaling/jmx-prometheus-exporter"
   restart: unless-stopped
   ports:
     - "5556:5556"
   environment:
     CONFIG_YML : "/etc/jmx_exporter/config.yml"
     JVM_OPTS: "-Xmx128M"
   volumes:
     - ./etc/jmx_exporter/config_kafka_0.yml:/etc/jmx_exporter/config.yml
   container_name: jmx-kafka-0
   depends_on:
     - kafka-0
   networks:
     - kafka_net
     
 jmx-kafka-1:
   image: "sscaling/jmx-prometheus-exporter"
   restart: unless-stopped
   ports:
     - "5557:5556"
   environment:
     CONFIG_YML : "/etc/jmx_exporter/config.yml"
     JVM_OPTS: "-Xmx128M"
   volumes:
     - ./etc/jmx_exporter/config_kafka_1.yml:/etc/jmx_exporter/config.yml
   container_name: jmx-kafka-1
   depends_on:
     - kafka-1
   networks:
     - kafka_net
     
 jmx-kafka-2:
   image: "sscaling/jmx-prometheus-exporter"
   restart: unless-stopped
   ports:
     - "5558:5556"
   environment:
     CONFIG_YML : "/etc/jmx_exporter/config.yml"
     JVM_OPTS: "-Xmx128M"
   volumes:
     - ./etc/jmx_exporter/config_kafka_2.yml:/etc/jmx_exporter/config.yml
   container_name: jmx-kafka-2
   depends_on:
     - kafka-2
   networks:
     - kafka_net

 prometheus:
   image: prom/prometheus:latest
   restart: unless-stopped   
   ports:
     - 9090:9090
   volumes:
     - ./etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
     - ./etc/prometheus/alert.rules:/etc/prometheus/alert.rules
   command: "--config.file=/etc/prometheus/prometheus.yml"
   container_name: prometheus
   networks:
     - kafka_net

 grafana:
   image: grafana/grafana:8.1.6
   restart: unless-stopped   
   ports:
     - "3001:3000"
   environment:
     GF_PATHS_DATA : /var/lib/grafana
     GF_SECURITY_ADMIN_PASSWORD : kafka
   volumes:
     - ./grafana/provisioning:/etc/grafana/provisioning
     - ./grafana/dashboards:/var/lib/grafana/dashboards
   container_name: grafana
   depends_on:
     - prometheus
   networks:
     - kafka_net

 alertmanager:
   image: prom/alertmanager:v0.21.0
   restart: unless-stopped
   container_name: alertmanager
   volumes:
     - ./etc/alertmanager/config.yml:/etc/alertmanager/config.yml
   command:
     - '--config.file=/etc/alertmanager/config.yml'
     - '--storage.path=/alertmanager'
     - '--log.level=debug'
   ports:
     - 9093:9093     
   networks:
     - kafka_net

     

volumes:
 data-kafka-0:
 data-kafka-1:
 data-kafka-2:

networks:
  kafka_net:      
    name: my_net